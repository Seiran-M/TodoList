import {FilterValuesType, TodolistType} from '../App'import {v1} from 'uuid'import {ACTIONS_TYPE} from './actions'export type RemoveTodolistActionType = {   type: typeof ACTIONS_TYPE.REMOVE_TODOLIST   payload: {      id: string   }}export type AddTodolistActionType = {   type: typeof ACTIONS_TYPE.ADD_TODOLIST   payload: {      title: string      todolistId: string   }}type ChangeFilterActionType = {   type: typeof ACTIONS_TYPE.CHANGE_FILTER   payload: {      filter: FilterValuesType      id: string   }}type ChangeTodolistTitleActionType = {   type: typeof ACTIONS_TYPE.CHANGE_TITLE   payload: {      title: string      id: string   }}export type  ActionsType =   RemoveTodolistActionType   | AddTodolistActionType   | ChangeFilterActionType   | ChangeTodolistTitleActionTypeconst initialState: Array<TodolistType> = []export const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {   switch (action.type) {      case ACTIONS_TYPE.REMOVE_TODOLIST: {         return state.filter(tl => tl.id !== action.payload.id)      }      case ACTIONS_TYPE.ADD_TODOLIST: {         const newTodoListId = action.payload.todolistId         const newTodolist: TodolistType = {id: newTodoListId, filter: 'all', title: action.payload.title}         return [newTodolist, ...state]      }      case ACTIONS_TYPE.CHANGE_FILTER: {         return state.map(tl => {            if (tl.id === action.payload.id) {               return {...tl, filter: action.payload.filter}            } else return tl         })      }      case ACTIONS_TYPE.CHANGE_TITLE: {         return state.map(tl => {            if (tl.id === action.payload.id) {               return {...tl, title: action.payload.title}            } else return tl         })      }      default:         return state   }}export const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {   return {type: ACTIONS_TYPE.REMOVE_TODOLIST, payload: {id: todolistId}}}export const addTodolistAC = (title: string): AddTodolistActionType => {   return {type: ACTIONS_TYPE.ADD_TODOLIST, payload: {title, todolistId: v1()}}}export const changeFilterAC = (filter: FilterValuesType, todolistId: string): ChangeFilterActionType => {   return {type: ACTIONS_TYPE.CHANGE_FILTER, payload: {filter: filter, id: todolistId}}}export const changeTodolistTitleAC = (title: string, todolistId: string): ChangeTodolistTitleActionType => {   return {type: ACTIONS_TYPE.CHANGE_TITLE, payload: {title: title, id: todolistId}}}