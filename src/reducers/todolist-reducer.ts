import {FilterValuesType, TodolistType} from '../App'import {v1} from 'uuid'export const REMOVE_TODOLIST = 'REMOVE-TODOLIST'export const ADD_TODOLIST = 'ADD-TODOLIST'export const CHANGE_FILTER = 'CHANGE-FILTER'export const CHANGE_TITLE = 'CHANGE-TITLE'export type RemoveTodolistActionType = {   type: typeof REMOVE_TODOLIST   id: string}export type AddTodolistActionType = {   type: typeof ADD_TODOLIST   title: string   todolistId: string}type ChangeFilterActionType = {   type: typeof CHANGE_FILTER   filter: FilterValuesType   id: string}type ChangeTodolistTitleActionType = {   type: typeof CHANGE_TITLE   title: string   id: string}export type  ActionsType =   RemoveTodolistActionType   | AddTodolistActionType   | ChangeFilterActionType   | ChangeTodolistTitleActionTypeconst initialState: Array<TodolistType> = []export const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {   switch (action.type) {      case REMOVE_TODOLIST: {         return state.filter(tl => tl.id !== action.id)      }      case ADD_TODOLIST: {         const newTodoListID = action.todolistId         const newTodolist: TodolistType = {id: newTodoListID, filter: 'all', title: action.title}         return [newTodolist, ...state]      }      case CHANGE_FILTER: {         // const todolist = state.find(tl=>tl.id===action.id)         //    if (todolist){         //       todolist.filter = action.filter         //       return [...state]         //    }         // return state         return state.map(tl => {            if (tl.id === action.id) {               return {...tl, filter: action.filter}            } else return tl         })      }      case CHANGE_TITLE: {         // const todolist = state.find(tl => tl.id === action.id)         // if (todolist) {         //    todolist.title = action.title         //    return [...state]         // }         // return state         return state.map(tl => {            if (tl.id === action.id) {               return {...tl, title: action.title}            } else return tl         })      }      default:         return state   }}export const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {   return {type: REMOVE_TODOLIST, id: todolistId}}export const addTodolistAC = (title: string): AddTodolistActionType => {   return {type: ADD_TODOLIST, title, todolistId: v1()}}export const changeFilterAC = (filter: FilterValuesType, todolistId: string): ChangeFilterActionType => {   return {type: CHANGE_FILTER, filter: filter, id: todolistId}}export const changeTodolistTitleAC = (title: string, todolistId: string): ChangeTodolistTitleActionType => {   return {type: CHANGE_TITLE, title: title, id: todolistId}}