import React, {ChangeEvent, useCallback} from 'react'import {Checkbox, IconButton} from '@material-ui/core'import {EditableSpan} from '../EditableSpan/EditableSpan'import {Delete} from '@material-ui/icons'import {TaskType} from './Todolist'type TaskPropsType = {   todolistId: string   task: TaskType   removeTask: (todolistId: string, taskId: string ) => void   changeTaskStatus: (taskId: string, isDone: boolean, todolistId: string) => void   changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void}export const Task = React.memo((props: TaskPropsType) => {   const onRemoveHandler = () => props.removeTask( props.todolistId, props.task.id)   const onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {      props.changeTaskStatus(props.task.id, e.currentTarget.checked, props.todolistId)   }   const onChangeTitleHandler = useCallback((newValue: string) => {      props.changeTaskTitle(props.task.id, newValue, props.todolistId)   },[props.changeTaskTitle,props.task.id,props.todolistId])   return (      <div className={props.task.isDone ? 'is-done' : ''} key={props.task.id}>         <Checkbox color="primary"                   checked={props.task.isDone}                   onChange={onChangeStatusHandler}         />         <EditableSpan title={props.task.title}                       onChange={onChangeTitleHandler}/>         <IconButton onClick={onRemoveHandler} size="small" aria-label="delete">            <Delete/>         </IconButton>      </div>   )})