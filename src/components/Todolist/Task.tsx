import React, {ChangeEvent, useCallback} from 'react'import {Checkbox, IconButton} from '@material-ui/core'import {EditableSpan} from '../EditableSpan/EditableSpan'import {Delete} from '@material-ui/icons'import {TaskType} from './Todolist'type TaskPropsType = {   todolistId: string   task: TaskType   removeTask: (todolistId: string, taskId: string) => void   changeTaskStatus: (taskId: string, isDone: boolean, todolistId: string) => void   changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void}export const Task = React.memo((props: TaskPropsType) => {   const {task, todolistId, removeTask, changeTaskTitle, changeTaskStatus} = props   const onRemoveHandler = () => removeTask(todolistId, task.id)   const onChangeStatusHandler = (e: ChangeEvent<HTMLInputElement>) => {      changeTaskStatus(task.id, e.currentTarget.checked, todolistId)   }   const onChangeTitleHandler = useCallback((newValue: string) => {      changeTaskTitle(task.id, newValue, todolistId)   }, [changeTaskTitle, task.id, todolistId])   return (      <div className={task.isDone ? 'is-done' : ''} key={task.id}>         <Checkbox color="primary"                   checked={task.isDone}                   onChange={onChangeStatusHandler}         />         <EditableSpan title={task.title}                       onChange={onChangeTitleHandler}         />         <IconButton onClick={onRemoveHandler} size="small" aria-label="delete">            <Delete/>         </IconButton>      </div>   )})