import {setAppErrorAC, setAppStatusAC} from '../state/reducers/app-reducer'import {Dispatch} from 'redux'import {ResponseType} from '../api/tasks-api'// generic functionexport const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {   if (data.messages.length) {      dispatch(setAppErrorAC(data.messages[0]))   } else {      dispatch(setAppErrorAC('Some error occurred'))   }   dispatch(setAppStatusAC('failed'))}export const handleServerNetworkError = (message: string, dispatch: ErrorUtilsDispatchType) => {   dispatch(setAppErrorAC(message))   dispatch(setAppStatusAC('failed'))}type ErrorUtilsDispatchType = Dispatch<ReturnType<typeof setAppErrorAC> | ReturnType<typeof setAppStatusAC>>